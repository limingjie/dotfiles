# ~/.zshrc

# Download Znap, if it's not there yet.
[[ -f ~/.config/zsh/zsh-snap/znap.zsh ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git ~/.config/zsh/zsh-snap

# Start Znap
source ~/.config/zsh/zsh-snap/znap.zsh

# Add brew completion script path to the fpath
fpath=(/opt/homebrew/share/zsh/site-functions $fpath)

# homebrew M1 path
if [[ -f /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# if (( $+commands[fortune] )) && (( $+commands[lolcat] )); then
#     fortune -l | lolcat
# fi

# starship
if (( $+commands[starship] )); then
    eval "$(starship init zsh)"
fi

# VIM mode
bindkey -v
# Keep `Ctrl+R` to open history
bindkey "^r" history-incremental-search-backward

# zsh options
setopt AUTO_CD
setopt CORRECT_ALL
setopt NO_CASE_GLOB # MacOS is case insensitive
setopt EXTENDED_HISTORY
setopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_REDUCE_BLANKS

# zsh-autocomplete
# https://github.com/marlonrichert/zsh-autocomplete
znap source marlonrichert/zsh-autocomplete
# Make `Tab` go straight to the menu and cycle there
bindkey '\t' menu-select "$terminfo[kcbt]" menu-select
bindkey -M menuselect '\t' menu-complete "$terminfo[kcbt]" reverse-menu-complete
# `Enter` always submit the command line
bindkey -M menuselect '\r' .accept-line

# zsh-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#8f8f8f"
znap source zsh-users/zsh-autosuggestions

# zsh-syntax-highlighting
typeset -A ZSH_HIGHLIGHT_PATTERNS
ZSH_HIGHLIGHT_PATTERNS+=('rm -rf *' 'fg=white,bold,bg=red')
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
znap source zsh-users/zsh-syntax-highlighting

# FZF
# $ brew info fzf
# To install useful keybindings and fuzzy completion:
#   /opt/homebrew/opt/fzf/install
[ -f ~/.config/fzf/.fzf.zsh ] && source ~/.config/fzf/.fzf.zsh

# zoxide is a smarter cd command, inspired by z and autojump.
if (( $+commands[zoxide] )); then
    eval "$(zoxide init zsh)"
fi

# eza
if (( $+commands[eza] )); then
    alias ls='eza --binary --classify --sort=Filename --icons'
    alias ll='eza --all --all --binary --classify --color-scale --group --long --sort=Filename --icons'
    alias llg='eza --all --all --binary --classify --color-scale --grid --group --long --sort=Filename --icons'
    alias la='eza --all --all --classify --sort=Filename --icons'
fi

# bat
if (( $+commands[bat] )); then
    alias cat=bat
fi

# Safe rm
if (( $+commands[trash] )); then
    alias rm=trash
fi

# nvim
if (( $+commands[nvim] )); then
    alias vi=nvim
    alias vim=nvim
fi

# python
if (( $+commands[python3] )); then
    alias python=python3
fi

# yt-dlp
if (( $+commands[yt-dlp] )); then
    alias yt='noglob yt-dlp --embed-thumbnail --embed-metadata -N 5 -f "bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b"'
    alias yt720='noglob yt-dlp --embed-thumbnail --embed-metadata -N 5 -f "bv*[height<=720][ext=mp4]+ba[ext=m4a]/b[height<=720][ext=mp4] / bv*+ba/b"'
    alias yta='noglob yt-dlp --embed-thumbnail --embed-metadata -f "ba[ext=m4a]/ba"'
fi

# alias for proxy
alias proxy='export http_proxy=http://127.0.0.1:4780;export https_proxy=http://127.0.0.1:4780;'

path+=('/usr/local/texlive/2021/bin')                  # Tex
path+=('/Users/mingjie/development/flutter/bin')       # Flutter
path+=('/usr/local/sbin')                              # sbin

if [[ $(uname -m) == 'arm64' ]]; then
    path+=('/opt/homebrew/opt/binutils/bin')           # binutils on macOS arm64
    path+=('/opt/homebrew/opt/openjdk/bin')            # OpenJDK
else
    path+=('/usr/local/opt/binutils/bin')              # binutils on macOS x86_64
fi

# Use the command in `brew info java` to make the system find the JDK.
# For the system Java wrappers to find this JDK, symlink it with
# sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk
export JAVA_HOME=$(/usr/libexec/java_home)

# rust
# Cargo's bin directory ($HOME/.cargo/bin)
path=($HOME/.cargo/bin $path)

export PATH="/usr/local/opt/ruby/bin:$PATH"
